.model small
.stack

.data

arr dw 01h, 02h, 03h, 04h, 05h, 06h
key dw 02h
msg1 db 10, 13, "Key found...success$"
msg2 db 10, 13, "Key not found...failure$"

len dw 6

.code

mov ax, @data
mov ds, ax

; assigning lower and upper bound to bx and dx respectively

mov bx, 00
mov dx, len
mov cx, key   ; remember that specially here cx = key

again:
cmp bx, dx
jg fail

; i.e if bx >= dx ?

mov ax, bx
add ax, dx
shr ax, 1

mov si, ax
add si, si
sub si, 02
cmp cx, arr[si]
jae big

dec ax
mov dx, ax
jmp again

big:
je success

inc ax
mov bx, ax
jmp again

success:
lea dx, msg1
mov ah, 09h
int 21h
jmp exit

fail:
lea dx, msg2
mov ah, 09h
int 21h
    
exit:
mov ah, 4ch
int 21h
end